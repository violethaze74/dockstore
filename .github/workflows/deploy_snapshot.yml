name: Develop Deploy

on:
  push:
    branches:
      - develop
      
jobs:
  build:
    runs-on: ubuntu-20.04
    
    permissions:
      id-token: write    

    steps:
      - uses: actions/checkout@v3
      # Step that does that actual cache save and restore
      - uses: actions/cache@v3.0.11
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
           ${{ runner.os }}-maven-
      - name: Deploy with mvnw
        run: ./mvnw --batch-mode deploy -ntp -s .github/snapshot-mvn-settings.xml -DskipTests
        env: 
          SNAPSHOT_DEPLOY_TOKEN: ${{ secrets.SNAPSHOT_DEPLOY_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: docker_checksum_upload_from_github
          aws-region: ${{ secrets.AWS_REGION }}

      # neat, quay itself uses manual github actions https://github.com/quay/quay/blob/master/.github/workflows/build-and-publish.yaml
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Set folder name
        run: |
          S3_FOLDER=${GITHUB_REF##refs/tags/}
          if [ $GITHUB_REF == $S3_FOLDER ]; then
            # If this isn't a tag, it must be a branch
            S3_FOLDER=${GITHUB_REF##refs/heads/}
          fi
          echo "S3_FOLDER=${S3_FOLDER//\//_}" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: quay.io/dockstore/dockstore-webservice:${{env.S3_FOLDER}}

      - name: Create checksums
        run: |
          docker inspect quay.io/dockstore/dockstore-webservice:${{env.S3_FOLDER}} | grep -A 1 RepoDigests
          docker inspect quay.io/dockstore/dockstore-webservice:${{env.S3_FOLDER}} | grep -A 1 RepoDigests | grep -oPm1 'sha256:\K\w+' > image-digest.txt        
          
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"

      - name: Copy checksum files
        run: aws s3 cp image-digest.txt  s3://${{ secrets.AWS_BUCKET }}/${{ env.S3_FOLDER }}-${{ steps.slug.outputs.sha7 }}/image-digest.txt
